<?php

namespace Proxies\__CG__\DataBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Players extends \DataBundle\Entity\Players implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'id', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'username', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'password', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'email', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'avatarUri', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'level', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'xp', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'race', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'sender', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'resource'];
        }

        return ['__isInitialized__', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'id', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'username', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'password', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'email', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'avatarUri', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'level', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'xp', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'race', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'sender', '' . "\0" . 'DataBundle\\Entity\\Players' . "\0" . 'resource'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Players $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(int $id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername(string $username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatarUri(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatarUri', []);

        return parent::getAvatarUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatarUri(string $avatarUri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatarUri', [$avatarUri]);

        return parent::setAvatarUri($avatarUri);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', []);

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel(int $level)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', [$level]);

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getXp(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getXp', []);

        return parent::getXp();
    }

    /**
     * {@inheritDoc}
     */
    public function setXp(int $xp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setXp', [$xp]);

        return parent::setXp($xp);
    }

    /**
     * {@inheritDoc}
     */
    public function getRace(): \DataBundle\Entity\Races
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRace', []);

        return parent::getRace();
    }

    /**
     * {@inheritDoc}
     */
    public function setRace(\DataBundle\Entity\Races $race)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRace', [$race]);

        return parent::setRace($race);
    }

    /**
     * {@inheritDoc}
     */
    public function getSender(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSender', []);

        return parent::getSender();
    }

    /**
     * {@inheritDoc}
     */
    public function setSender(\Doctrine\Common\Collections\Collection $sender)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSender', [$sender]);

        return parent::setSender($sender);
    }

    /**
     * {@inheritDoc}
     */
    public function getResource(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResource', []);

        return parent::getResource();
    }

    /**
     * {@inheritDoc}
     */
    public function setResource(\Doctrine\Common\Collections\Collection $resource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResource', [$resource]);

        return parent::setResource($resource);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

}
